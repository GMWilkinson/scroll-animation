{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","html","document","documentElement","canvas","getElementById","context","getContext","currentFrame","index","toString","padStart","img","Image","src","width","height","onload","drawImage","window","addEventListener","scrollFraction","scrollTop","scrollHeight","innerHeight","frameIndex","Math","min","frameCount","ceil","requestAnimationFrame","i","console","log","preloadImages","className","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2PAkHeA,GClHA,I,wLDOX,IAAMC,EAAOC,SAASC,gBAChBC,EAASF,SAASG,eAAe,kBACjCC,EAAUF,EAAOG,WAAW,MAG5BC,EAAe,SAAAC,GAAK,8BAEPA,EAAMC,WAAWC,SAAS,EAAG,KAFtB,qBAapBC,EAAM,IAAIC,MAChBD,EAAIE,IAAMN,EAAa,GACvBJ,EAAOW,MAAM,KACbX,EAAOY,OAAO,IACdJ,EAAIK,OAAO,WACTX,EAAQY,UAAUN,EAAK,EAAG,EAAGA,EAAIG,MAAQ,IAAMH,EAAII,OAAS,MAQ9DG,OAAOC,iBAAiB,UAAU,WAChC,IAEMC,EAFYpB,EAAKqB,WACFrB,EAAKsB,aAAeJ,OAAOK,aAE1CC,EAAaC,KAAKC,IACtBC,IACAF,KAAKG,KAjCU,IAiCLR,IAGZS,uBAAsB,kBAdJrB,EAcsBgB,EAAa,EAbrDb,EAAIE,IAAMN,EAAaC,QACvBH,EAAQY,UAAUN,EAAK,EAAG,EAAGA,EAAIG,MAAQ,IAAMH,EAAII,OAAS,KAF1C,IAAAP,QAhBE,WACpB,IAAK,IAAIsB,EAAI,EAAGA,EAPC,IAOeA,IAAK,CACnC,IAAMnB,EAAM,IAAIC,MAChBmB,QAAQC,IAAIzB,EAAauB,IACzBnB,EAAIE,IAAMN,EAAauB,IA6B3BG,K,+BAIA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SACE,wBAAQC,GAAG,qBAEb,sBAAKD,UAAU,WAAf,UACE,mHAKA,2IAUA,8MAQA,6IAMA,gIAUA,8N,GA/FQE,IAAMC,YEQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASG,eAAe,SAM1BkC,M","file":"static/js/main.23ecc9c5.chunk.js","sourcesContent":["import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    const html = document.documentElement;\n    const canvas = document.getElementById(\"hero-lightpass\");\n    const context = canvas.getContext(\"2d\");\n\n    const frameCount = 143;\n    const currentFrame = index => (\n      // `https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/${index.toString().padStart(4, '0')}.jpg`\n      `/images/frame_${index.toString().padStart(3, '0')}_delay-0.04s.gif`\n    )\n\n    const preloadImages = () => {\n      for (let i = 0; i < frameCount; i++) {\n        const img = new Image();\n        console.log(currentFrame(i))\n        img.src = currentFrame(i);\n      }\n    };\n\n    const img = new Image()\n    img.src = currentFrame(1);\n    canvas.width=1158;\n    canvas.height=770;\n    img.onload=function() {\n      context.drawImage(img, 0, 0, img.width = 1000, img.height = 1000);\n    }\n\n    const updateImage = index => {\n      img.src = currentFrame(index);\n      context.drawImage(img, 0, 0, img.width = 1000, img.height = 1000);\n    }\n    \n    window.addEventListener('scroll', () => {  \n      const scrollTop = html.scrollTop;\n      const maxScrollTop = html.scrollHeight - window.innerHeight;\n      const scrollFraction = scrollTop / maxScrollTop;\n      const frameIndex = Math.min(\n        frameCount - 1,\n        Math.ceil(scrollFraction * frameCount)\n      );\n      \n      requestAnimationFrame(() => updateImage(frameIndex + 1))\n    });\n\n    preloadImages()\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"body\">\n          <canvas id=\"hero-lightpass\" />\n        </div>\n        <div className=\"text-box\">\n          <p>\n            It's peanut butter jelly time!\n            Peanut butter jelly time!\n            Peanut butter jelly time!\n          </p>\n          <p>\n            Now Where he at?\n            Where he at?\n            Where he at?\n            Where he at?\n            NowThere he go\n            There he go\n            There he go\n            There he go\n          </p>\n          <p>\n            Do the Peanut butter jelly\n            Peanut butter jelly\n            Peanut butter jelly with a baseball bat\n            Do the Peanut butter jelly\n            Peanut butter jelly\n            Peanut butter jelly with a baseball bat\n          </p>\n          <p>\n            Now break it down and freeze\n            Take it down to your knees\n            Now lean back and squeeze\n            Now get back up and scream\n          </p>\n          <p>\n            Now sissy walk\n            Sissy walk\n            Sissy walk\n            Sissy walk\n            Now sissy walk\n            Sissy walk\n            Sissy walk\n            Sissy walk\n          </p>\n          <p>\n            Now walk walk walk walk\n            Stomp stomp stomp stomp\n            Slide slide slide slide\n            Back it up one more time\n            Now walk walk walk walk\n            Stomp stomp stomp stomp\n            Peanut butter jelly break itâ€¦\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}